[project]
# Project's name must be the same as PROJECT_NAME environment variable used elsewhere.
name = "python-template"
version = "0.1.0"
description = "Xmartlabs' Python project template"
authors = [{ name = "Xmartlabs", email = "getintouch@xmartlabs.com" }]
requires-python = ">=3.13.0,<4.0.0"
readme = "README.md"
dependencies = [
    "alembic>=1.15.1,<2",
    "asyncpg>=0.30.0,<0.31",
    "bcrypt==4.3.0",
    "email-validator>=2.2.0,<3",
    "celery>=5.4.0,<6",
    "fastapi>=0.115.11,<0.116",
    "fastapi-pagination>=0.12.26,<0.13",
    "httpx>=0.28.1,<0.29",
    "itsdangerous>=2.2.0,<3",
    "opentelemetry-api>=1.31.1,<2",
    "opentelemetry-sdk>=1.31.1,<2",
    "opentelemetry-instrumentation-fastapi>=0.52b1,<0.53",
    "opentelemetry-instrumentation-sqlalchemy>=0.52b1,<0.53",
    "opentelemetry-exporter-otlp>=1.31.1,<2",
    "passlib>=1.7.4,<2",
    "psycopg2>=2.9.9,<3",
    "ptpython>=3.0.29,<4",
    "pydantic>=2.10.6,<3",
    "pydantic-settings>=2.8.1,<3",
    "python-jose>=3.4.0,<4",
    "redis>=5.2.1,<6",
    "sqladmin>=0.20.1,<0.21",
    "sqlalchemy>=2.0.39,<3",
    "structlog>=25.3.0,<26",
    "uvicorn>=0.34.0,<0.35",
]

[dependency-groups]
dev = [
    "coverage>=7.7.1,<8",
    "flower>=2.0.1,<3",
    "mock>=5.2.0,<6",
    "mypy>=1.15.0,<2",
    "mypy-extensions>=1.0.0,<2",
    "pytest>=8.3.5,<9",
    "pytest-asyncio==0.26.0",
    "pre-commit>=4.2.0,<5",
    "ruff>=0.11.3,<0.12",
]
types = [
    "celery-types>=0.23.0,<0.24",
    "types-passlib>=1.7.7.20241221,<2",
    "types-pyasn1>=0.6.0.20250208,<0.7",
    "types-python-jose>=3.4.0.20250224,<4",
    "types-mock>=5.2.0.20250306,<6",
    "typing-inspect>=0.9.0,<0.10",
    "typing-extensions>=4.12.2,<5",
]

[tool.uv]
default-groups = ["dev", "types"]

[tool.hatch.build.targets.sdist]
include = ["src/*"]

[tool.hatch.build.targets.wheel]
include = ["src/*"]

[tool.hatch.build.targets.wheel.sources]
"src/*" = "*"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 130
force-exclude = true                                                # Ensure exclusions are respected by the pre-commit hook
extend-exclude = ["src/alembic/versions", "__pycache__", "scripts"]

[tool.ruff.lint]
extend-select = [ # Defaults: [ "E4", "E7", "E9", "F" ] (https://docs.astral.sh/ruff/rules/#error-e)
    "E501", # line-too-long
    "I001", # unsorted-imports
    "I002", # missing-required-import
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["src"]
known-third-party = ["fastapi", "sqlalchemy", "pydantic"]
force-single-line = false
combine-as-imports = true

[tool.mypy]
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
ignore_missing_imports = true
disallow_untyped_defs = true
warn_unused_ignores = false
no_implicit_optional = true
implicit_reexport = true
explicit_package_bases = true
namespace_packages = true
follow_imports = "silent"
warn_redundant_casts = true
check_untyped_defs = true
no_implicit_reexport = true
disable_error_code = ["name-defined", "call-arg", "attr-defined"]

[[tool.mypy.overrides]]
module = "starlette_context.plugins"
implicit_reexport = true

[[tool.mypy.overrides]]
module = "app.middlewares.logging_middleware"
warn_unused_ignores = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = false
warn_untyped_fields = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
