services:
  devcontainer:
    build:
      context: ../
      target: devcontainer
      args:
        PROJECT_NAME: ${PROJECT_NAME:-python-template}
        USER: ${USER}
    ports:
      - '8000:8000'
    volumes:
      - source: ..
        target: /opt/app/${PROJECT_NAME:-python-template}
        type: bind
      - source: ./commandhistory
        target: /home/${USER}/.commandhistory
        type: bind
      - source: cache
        target: /home/${USER}/.cache
        type: volume
    env_file: ../.env

  postgres:
    image: postgres:16
    pull_policy: always
    restart: unless-stopped
    environment:
      POSTGRES_USER: dev
      POSTGRES_DB: dev
      POSTGRES_PASSWORD: dev
    volumes:
      - source: postgres
        target: /var/lib/postgresql/data
        type: volume

  redis:
    image: redis:8.0-M04-alpine
    ports:
      - '6379:6379'

  rabbitmq:
    image: rabbitmq:4.1-rc-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'

  celery_worker:
    build:
      context: ../
      dockerfile: Dockerfile
      target: celery_worker
    env_file: ../.env
    depends_on:
      - rabbitmq
      - redis

volumes:
  postgres: {}
  cache: {}
